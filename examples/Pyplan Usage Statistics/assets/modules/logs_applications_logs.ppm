{"nodeList": [{"identifier": "logs_model_use_stats", "definition": "result = pd.DataFrame()\nif logs_of_selected_app is not None:\n    df = logs_of_selected_app.groupby(['user', 'session_key'], as_index=False).agg({'date': 'min', 'calls': 'sum'})\n    df = df[['date', 'user', 'calls']].sort_values('date')\n    df['date'] = df['date'].dt.strftime('%Y-%m-%d')\n\n    result = df.set_index(['date', 'user'])", "title": "Use stats", "nodeClass": "variable", "moduleId": "logs_applications_logs", "x": 460, "y": 120, "z": 1, "w": "180", "h": "40", "description": "", "units": null, "color": "#d5a6bd", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "aa0eca9dab0dd41069551473a751336dc", "definition": "", "title": "Application logs", "nodeClass": "text", "moduleId": "logs_applications_logs", "x": 20, "y": 50, "z": -1, "w": "860", "h": "310", "description": "Model logs", "units": null, "color": "#EEEEEE", "errorInDef": false, "nodeInfo": {"showInputs": 0, "showOutputs": 0, "showLabel": 1, "showBorder": 0, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": null}, {"identifier": "a0e63eb6bc1a4402e83a6a5bda5326ed9", "definition": "result = logs_of_current_company", "title": "Logs of current company", "nodeClass": "alias", "moduleId": "logs_applications_logs", "x": 40, "y": 120, "z": 1, "w": "180", "h": "40", "description": "", "units": null, "color": "#4CBCFF", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": "logs_of_current_company", "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": {"component_type": "core.Table", "component_id": "19fbdabf-3248-49b0-a8dd-3c5ff3574ba2", "namespace": "ppc", "node_id": "logs_of_current_company", "x": 0, "y": 0, "w": 6, "h": 3, "error_code": null, "error_detail": null, "properties": {"code": null, "custom_code": false, "title": {"enabled": true, "text": "Logs of current company", "custom_text": "", "show_units": true, "units_text": ""}, "hide_header": null, "hide_border": null, "table_properties": {"colHeaders": true, "manualColumnResize": true, "multiColumnSorting": true, "rowHeaders": false}, "calculated_fields": [], "unlink": [], "pivot": {"agg": {"calls": "sum"}, "params": {"rows": [], "columns": [], "measures": []}}, "page_size": {"rows": 100, "columns": 500}, "sort": {}, "renderers": {}, "columns": {}, "right_total": false, "bottom_total": false, "hide_empty_data": "", "show_pivot_toolbar": false, "show_filter_toolbar": false, "drilldowns": [], "styles": {"all": {"style": {}, "conditional_format": [], "value_format": {"type": "number", "thousands_separator": true, "decimal_places": 2, "prefix": "", "suffix": "", "date_format": ""}}, "custom": []}, "applied_hierarchies": {}}, "alternative_properties": null, "filters": {}, "cell_properties": null}, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "logs_app_selector", "definition": "result = pp.selector(logs_apps, 0, False)", "title": "Logs app selector", "nodeClass": "inputselector", "moduleId": "logs_applications_logs", "x": 250, "y": 70, "z": 1, "w": "180", "h": "30", "description": null, "units": null, "color": "#4cffa6", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "logs_app_saveas_logs", "definition": "from json import loads\nfrom os.path import split, splitext\n\nresult = None\nif logs_of_current_company is not None:\n    df = logs_of_current_company\n\n    # Selected columns\n    df = df[['date', 'user', 'session_key', 'path', 'action', 'body', 'query','app_uri']].fillna('')\n    \n    splitted_path = split(logs_app_selector.value)\n    _base_path = splitted_path[0] \n    _app_name = f'\"{splitext(splitted_path[1])[0]}\"'\n\n    df_save_as = df[(df['path'] == '/api/apps/saveAs/') & (df['query'].str.contains(_app_name)) & (df['app_uri'].str.contains(_base_path))]\n\n    if not df_save_as.empty:\n        session_with_saveas = df_save_as['session_key'][0:1].real[0]\n        date_with_saveas = df_save_as['date'][0:1].real[0]\n\n        # Filter prior events\n        df = df[ (df['session_key'] == session_with_saveas) & (df['date'] <= date_with_saveas) ] \n        \n        # Find last save\n        df_last_save = df[df['path'] == '/api/apps/save/'].sort_values('date', ascending=False)\n        if not df_last_save.empty:\n            last_date_with_save = df_last_save['date'][0:1].real[0]\n            \n            #filter events between save and saveas\n            df = df[ df['date'] >= last_date_with_save] \n        \n        df = df[['date', 'user', 'session_key', 'path', 'action', 'body']]\n        \n        df['path'] = np.where(df['path'] == '/api/apps/saveAs/', '/api/apps/save/', df['path'])       \n            \n        result = df", "title": "App SaveAs logs", "nodeClass": "variable", "moduleId": "logs_applications_logs", "x": 250, "y": 300, "z": 1, "w": "180", "h": "40", "description": "", "units": null, "color": "#d5a6bd", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "logs_of_selected_app", "definition": "result = None\nif logs_of_current_company is not None:\n    df = logs_of_current_company[logs_of_current_company['app_uri'] == logs_app_selector.value]\n    result = df", "title": "Logs of selected app", "nodeClass": "variable", "moduleId": "logs_applications_logs", "x": 250, "y": 120, "z": 1, "w": "180", "h": "40", "description": "", "units": null, "color": "#4CBCFF", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": {"component_type": "core.Table", "component_id": "4346c009-b909-4fbf-af44-c9b7814daf3d", "namespace": "ppc", "node_id": "logs_of_selected_app", "x": 0, "y": 0, "w": 6, "h": 3, "error_code": null, "error_detail": null, "properties": {"code": null, "custom_code": false, "title": {"enabled": true, "text": "Logs of selected app", "custom_text": "", "show_units": true, "units_text": ""}, "hide_header": null, "hide_border": null, "table_properties": {"colHeaders": true, "manualColumnResize": true, "multiColumnSorting": true, "rowHeaders": false}, "calculated_fields": [], "unlink": [], "pivot": {"agg": {"calls": "sum"}, "params": {"rows": [], "columns": [], "measures": []}}, "page_size": {"rows": 100, "columns": 500}, "sort": {}, "renderers": {}, "columns": {}, "right_total": false, "bottom_total": false, "hide_empty_data": "", "show_pivot_toolbar": false, "show_filter_toolbar": false, "drilldowns": [], "styles": {"all": {"style": {}, "conditional_format": [], "value_format": {"type": "number", "thousands_separator": true, "decimal_places": 2, "prefix": "", "suffix": "", "date_format": ""}}, "custom": []}, "applied_hierarchies": {}}, "alternative_properties": {"code": null, "custom_code": false, "title": {"enabled": true, "text": "Logs of selected app", "custom_text": "", "show_units": true, "units_text": ""}, "hide_header": null, "hide_border": null, "chart_type": {"main_type": "column", "subtype": "column_normal", "plotly_import_source": "px", "plotly_code": "bar", "chart_params": {}, "chart_layout": {"barmode": "group"}, "chart_update_traces": {}}, "chart_properties": {"template": "simple_white"}, "chart_layout": {}, "selected_event": false, "hover_event": false, "hover_select_targets": [], "drilldown_event": true, "unlink": [], "pivot": {"agg": {"calls": "sum"}, "params": {"y": "calls", "x": "instance_company_code", "color": "company"}}, "page_size": {"rows": 1000, "columns": 1000}, "hide_empty_data": false, "drilldowns": [], "show_pivot_toolbar": false, "show_filter_toolbar": false, "available_drilldown_indexes": ["method", "path", "query", "body", "instance_created_at", "session_key", "instance_user_id", "user", "instance_duration", "app_id", "app_name", "app_uri", "date", "action"], "supported_types_for_drilldown": ["column", "bar", "line", "area", "pie"], "styles": {"all": {"value_format": {"type": "number", "thousands_separator": true, "decimal_places": 2, "prefix": "", "suffix": "", "date_format": ""}, "value_format_secondary_axis": {"thousands_separator": false, "prefix": "", "suffix": "", "date_format": ""}, "color_discrete_sequence": "", "color_continuous_scale": "", "custom_series_colors_name": "", "labels": {}, "labels_secondary_axis": {}, "style": {}, "conditional_format": []}, "custom": []}, "applied_hierarchies": {}, "calculated_fields": []}, "filters": {}, "cell_properties": null}, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "logs_app_change_log", "definition": "from json import loads\n_df = pd.DataFrame()\nif logs_of_selected_app is not None:\n    df = logs_of_selected_app\n\n    # Selected columns\n    df = df[['date', 'user', 'session_key', 'path', 'action', 'body']].fillna('')\n    \n    # Append saveModelAs events\n    if logs_app_saveas_logs is not None:\n        df = df.append(logs_app_saveas_logs)\n        \n    # Applied filters\n    PATHS_TO_FILTER = ['/api/modelManager/createNode/', '/api/modelManager/deleteNodes/', '/api/modelManager/setNodeProperties/', '/api/apps/save/', '/api/dashboardManager/pivotGrid/setCubeChanges/']\n\n    df = df[df['path'].isin(PATHS_TO_FILTER)]\n    df = df[['date', 'user', 'session_key', 'action', 'body', 'path']]\n    \n    # Filter actions post save model\n    df_saves = df[ (df['path'] == '/api/apps/save/')].groupby('session_key', as_index=False).agg({'date': 'max'})\n    df_saves.rename(columns={'date': 'last_saved'}, inplace=True)\n    df = df.merge(df_saves, on='session_key', how='left')\n    df = df[df['date'] <= df['last_saved']]\n\n    df['node'] = ''\n\n    def _fn(row):\n        _body = row['body']\n        if row['action'] == 'Set node properties':\n            try:\n                _json_node = _body[:_body.find(',')] + '}'\n                row['node'] = loads(_json_node)['node']\n            except:\n                row['node'] = '-'\n            if 'definition' in _body:\n                row['action'] = 'Update definition'\n            elif 'identifier' in _body:\n                row['action'] = 'Change identifier'\n            else:\n                row['action'] = None\n        elif row['action'] == 'Edit input table node':\n            try:\n                _json_node = _body[:_body.find(',')] + '}'\n                row['node'] = loads(_json_node)['node']\n            except:\n                row['node'] = '-'\n\n        elif row['action'] == 'Delete node':\n            try:\n                row['node'] = _body[_body.find('[')+2:-3].replace('\"', '')\n            except:\n                pass\n        return row\n\n    df = df.apply(_fn, axis=1)[['date', 'user', 'action', 'node', 'session_key']]\n\n    df = df.groupby(['user', 'action', 'node', 'session_key'], as_index=False).max().sort_values('date')\n    df = df[['date', 'user', 'session_key', 'action', 'node']]\n\n    df = df[['date', 'user', 'session_key', 'action', 'node']].sort_values('date', ascending=False)\n    df['date'] = df['date'].dt.strftime('%Y-%m-%d %H:%M')\n    \n    result = df.reset_index(drop=True)", "title": "App change log", "nodeClass": "report", "moduleId": "logs_applications_logs", "x": 460, "y": 300, "z": 1, "w": "180", "h": "40", "description": "", "units": null, "color": "#d5a6bd", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "logs_app_updated_by", "definition": "result = pd.DataFrame()\nif logs_of_selected_app is not None:\n    df = logs_of_selected_app[logs_of_selected_app['path'].isin(['/api/apps/save/'])]\n    df = df.groupby(['user','session_key'], as_index=False).agg({'date': 'min'})\n    df = df[['date','user']].sort_values('date', ascending=False)\n    df['date'] = df['date'].dt.strftime('%Y-%m-%d %H:%M')\n\n    result = df.reset_index(drop=True)", "title": "Updated by", "nodeClass": "report", "moduleId": "logs_applications_logs", "x": 460, "y": 180, "z": 1, "w": "180", "h": "40", "description": "", "units": null, "color": "#d5a6bd", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "logs_calls_by_user", "definition": "result = pd.DataFrame()\nif len(logs_model_use_stats) > 0:\n    df = logs_model_use_stats.groupby('user').agg({'calls': 'sum'})\n\n    result = df", "title": "Calls by user", "nodeClass": "report", "moduleId": "logs_applications_logs", "x": 670, "y": 120, "z": 1, "w": "180", "h": "40", "description": "", "units": null, "color": "#d5a6bd", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "logs_app_calls_sessions_by_day", "definition": "result = None\nif logs_of_selected_app is not None:\n    df = logs_of_selected_app[['date', 'session_key', 'user', 'calls']]\n    df['date'] = df['date'].dt.strftime('%Y-%m-%d')\n    result = df.set_index(['date', 'session_key', 'user'])", "title": "Calls and sessions by day", "nodeClass": "report", "moduleId": "logs_applications_logs", "x": 460, "y": 240, "z": 1, "w": "180", "h": "40", "description": "", "units": null, "color": "#d5a6bd", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}]}