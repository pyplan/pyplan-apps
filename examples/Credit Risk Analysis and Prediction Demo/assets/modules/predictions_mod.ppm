{"nodeList": [{"identifier": "node1_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy", "definition": "result = 0", "title": "Predictions", "nodeClass": "text", "moduleId": "predictions_mod", "x": 30, "y": 40, "z": "-3", "w": 830, "h": 180, "description": null, "units": null, "color": "#eeeeee", "errorInDef": false, "nodeInfo": {"showInputs": 0, "showOutputs": 0, "showLabel": 1, "showBorder": 0, "fill": 1, "useNodeFont": 1}, "nodeFont": "Helvetica,21", "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": null}, {"identifier": "new_loans_to_add", "definition": "_columns = original_data.columns.values\n_form_values = new_loans.value\n_complete_new_loans = get_completed_loans_fn(_form_values)\n\n# Checks if there is any complete loan\nif len(_complete_new_loans) != 0:\n    _df = pre_process_new_loans_fn(_form_values)\n    \n    # Append Risk column to New Loans - Pre-processing dataframe\n    _new_loans_risk = _form_values[_form_values.index.get_level_values('id').isin(_complete_new_loans)]['feedback'].values\n    _df['Risk'] = _new_loans_risk\n    \n    # Replace 'no info' values with NaN\n    _df['Saving accounts'] = np.where(_df['Saving accounts'] == 'no info', np.nan, _df['Saving accounts'])\n    _df['Checking account'] = np.where(_df['Checking account'] == 'no info', np.nan, _df['Checking account'])\n    \n    # Keep loans that have feedback\n    _df = _df[~_df['Risk'].isna()]\n    \n    # Reorder columns by the original data columns (makes it easier to concat afterwards)\n    result = _df[_columns]\nelse:\n    result = 0", "title": "New Loans to Add", "nodeClass": "variable", "moduleId": "predictions_mod", "x": 280, "y": 110, "z": 1, "w": 184, "h": 30, "description": null, "units": null, "color": "#4CBCFF", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "add_new_loans_to_csv", "definition": "# Checks if there is any complete loan\nif len(new_loans_to_add) == 0:\n    result = 0\nelse:\n    import os\n    from random import random\n    \n    _file_path = current_path + '/inputs/new_loans.csv'\n    # Paste random number into the reload node definition (it refreshes New Loans CSV read)\n    reload_new_loans.node.definition = 'result = ' + str(random())\n    \n    if not os.path.isfile(_file_path):\n        # If file does not exist, create file with headers\n        result = new_loans_to_add.to_csv(_file_path, sep = ',', na_rep = 'NA', header = True, mode = 'w')\n    else:\n        # If file exists, add new rows without the headers\n        result = new_loans_to_add.to_csv(_file_path, sep = ',', na_rep = 'NA', header = False, mode = 'a')", "title": "Add New Loans to CSV", "nodeClass": "button", "moduleId": "predictions_mod", "x": 510, "y": 110, "z": 1, "w": 154, "h": 40, "description": null, "units": null, "color": "#CBCBCB", "errorInDef": false, "nodeInfo": {"showInputs": 0, "showOutputs": 0, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "reset_new_loans", "definition": "# Resets input nodes definition\n\nnew_loans.delete_form()\n\n# To avoid error\nresult = 0", "title": "Reset New Loans Inputs", "nodeClass": "button", "moduleId": "predictions_mod", "x": 680, "y": 110, "z": 1, "w": 154, "h": 40, "description": null, "units": null, "color": "#CBCBCB", "errorInDef": false, "nodeInfo": {"showInputs": 0, "showOutputs": 0, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "delete_new_loans_from_csv", "definition": "import os\nfrom random import random\n\n_file_path = current_path + '/inputs/new_loans.csv'\n\nif not os.path.isfile(_file_path):\n    result = 0\nelse:\n    # If file exists, delete it and paste random number into the reload node definition (it refreshes New Loans CSV read)\n    reload_new_loans.node.definition = 'result = ' + str(random())\n    \n    result = os.remove(_file_path)", "title": "Delete New Loans From CSV", "nodeClass": "button", "moduleId": "predictions_mod", "x": 510, "y": 160, "z": 1, "w": 154, "h": 40, "description": null, "units": null, "color": "#CBCBCB", "errorInDef": false, "nodeInfo": {"showInputs": 0, "showOutputs": 0, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "new_loans", "definition": "from pyplan_core.classes.FormTypes import FormColumn, FormSettings, DataType, ColumnType, DatabaseConnectionString, SQLiteConnection, PostgreSQLConnection\n\n\nresult = pp.form(\n    table_name='new_loans',\n    columns=[\n        FormColumn(field='age', title='Age', column_type=ColumnType.input, data_type=DataType.integer),\n        FormColumn(field='sex', title='Sex', column_type=ColumnType.selector, values=sex),\n        FormColumn(field='job_category', title='Job Category', column_type=ColumnType.selector, values=job_category),\n        FormColumn(field='housing', title='Housing', column_type=ColumnType.selector, values=housing),\n        FormColumn(field='savings_account', title='Savings Account', column_type=ColumnType.selector, values=saving_accounts),\n        FormColumn(field='checking_account', title='Checking Account', column_type=ColumnType.selector, values=checking_account),\n        FormColumn(field='credit_amount', title='Credit Amount', column_type=ColumnType.input, data_type=DataType.integer),\n        FormColumn(field='duration', title='Duration (months)', column_type=ColumnType.input, data_type=DataType.integer),\n        FormColumn(field='purpose', title='Purpose', column_type=ColumnType.selector, values=purpose),\n        FormColumn(field='rf_prediction', title='RF Prediction', column_type=ColumnType.calc, formula=get_rfm_loan_prediction_fn),\n        FormColumn(field='lr_prediction', title='LR Prediction', column_type=ColumnType.calc, formula=get_lrm_loan_prediction_fn),\n        FormColumn(field='gnb_prediction', title='GNB Prediction', column_type=ColumnType.calc, formula=get_gnbm_loan_prediction_fn),\n        FormColumn(field='rf_suggested_amount', title='RF Suggested Amount', column_type=ColumnType.calc, formula=new_loans_suggested_credit_amount_rfm_fn),\n        FormColumn(field='lr_suggested_amount', title='LR Suggested Amount', column_type=ColumnType.calc, formula=new_loans_suggested_credit_amount_lrm_fn),\n        FormColumn(field='gnb_suggested_amount', title='GNB Suggested Amount', column_type=ColumnType.calc, formula=new_loans_suggested_credit_amount_gnbm_fn),\n        FormColumn(field='feedback', title='Feedback', column_type=ColumnType.selector, values=['good', 'bad'])\n    ], \n    settings=FormSettings(database_engine=DatabaseConnectionString.sqlite, database_connection=SQLiteConnection(database_path='forms_data/forms.db'), initial_empty_rows=10, allow_add_rows=True, allow_remove_rows=True, fixed_columns=0, from_dataframe=False, remove_old_rows=False)\n)", "title": "New Loans", "nodeClass": "form", "moduleId": "predictions_mod", "x": 60, "y": 110, "z": 1, "w": 184, "h": 30, "description": null, "units": null, "color": null, "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "predictions_functions_mod", "definition": "", "title": "Predictions Functions", "nodeClass": "module", "moduleId": "predictions_mod", "x": 60, "y": 70, "z": 1, "w": 180, "h": 30, "description": null, "units": null, "color": "#9FC5E8", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}]}