{"nodeList": [{"identifier": "data", "definition": "# Variable to refresh calculations when the 'Add New Loans to CSV' or 'Delete New Loans From CSV' buttons are executed\n_reload = reload_new_loans\n\nimport os\n\n_file_path = current_path + '/inputs/new_loans.csv'\n\n# Check if CSV file exists\nif not os.path.isfile(_file_path):\n    _data = original_data.copy()\nelse:\n    if consider_new_loans == 'Yes':\n        # Concatenate original loans with new loans\n        _data = pd.concat([original_data, new_data])\n    else:\n        # Take original loans only\n        _data = original_data.copy()\n\n# Add value column. Helps counting\n_data['value'] = 1.\n\n# Add Age category column\n_interval = (17, 25, 35, 60, 120)\n_age_categories = ['Student', 'Young', 'Adult', 'Senior']\n_data['Age category'] = pd.cut(_data['Age'], _interval, labels = _age_categories)\n\n# Add Job category column (description from the numerical Job column)\n_job_categories = {\n    'Job': [0, 1, 2, 3],\n    'Job category': ['0- unskilled and non-resident', '1- unskilled and resident', '2- skilled', '3- highly skilled']\n}\n_job_categories_df = pd.DataFrame(_job_categories)\n_data = _data.merge(_job_categories_df, on = 'Job', how = 'left')\n\n_data['Saving accounts'] = _data['Saving accounts'].fillna('no info')\n_data['Checking account'] = _data['Checking account'].fillna('no info')\n\nresult = _data", "title": "Data (with new columns and loans)", "nodeClass": "outputnode", "moduleId": "data_mod", "x": 280, "y": 200, "z": 1, "w": "184", "h": "30", "description": null, "units": null, "color": "#4CBCFF", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "node1_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy", "definition": "result = 0", "title": "Data", "nodeClass": "text", "moduleId": "data_mod", "x": 30, "y": 40, "z": -1, "w": "470", "h": "270", "description": null, "units": null, "color": "#EEEEEE", "errorInDef": false, "nodeInfo": {"showInputs": 0, "showOutputs": 0, "showLabel": 1, "showBorder": 0, "fill": 1, "useNodeFont": 1}, "nodeFont": "Helvetica,21", "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": null}, {"identifier": "new_data", "definition": "# Variable to refresh calculations when the 'Add New Loans to CSV' or 'Delete New Loans From CSV' buttons are executed\n_reload = reload_new_loans\n\nimport os\n\n_file_path = current_path + '/inputs/new_loans.csv'\n\n# Check if CSV file exists\nif os.path.isfile(_file_path):\n    result = pd.read_csv(_file_path, index_col = 0)\nelse:\n    result = 0", "title": "New Data", "nodeClass": "datareading", "moduleId": "data_mod", "x": 60, "y": 200, "z": 1, "w": "184", "h": "30", "description": null, "units": null, "color": "#A5FF4B", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "reload_new_loans", "definition": "result = 0.8262670248383301", "title": "Reload New Loans", "nodeClass": "outputnode", "moduleId": "data_mod", "x": 80, "y": 160, "z": 1, "w": "130", "h": "32", "description": null, "units": null, "color": "#FFFF4B", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "data_overview_post_manip", "definition": "_data = data\n\n# Get column values information\n_unique_values = _data.nunique()\n_data_types = _data.dtypes.astype(str).values.tolist()\n_null_values = _data.isnull().sum()\n_empty_values = ((_data == '') | (_data == ' ')).sum()\n\n# Create dataframe\n_df = pd.DataFrame({\n    'Unique values': _unique_values,\n    'Data type': _data_types, \n    'Null values': _null_values, \n    'Empty values': _empty_values\n    }\n)\n\n# Bad and good loans count and percentage\n_observations = ((_data['Risk'] == 'good') | (_data['Risk'] == 'bad')).sum()\n_good_loans = (_data['Risk'] == 'good').sum()\n_bad_loans = (_data['Risk'] == 'bad').sum()\n_good_loans_pc = _good_loans / (_good_loans + _bad_loans)\n_bad_loans_pc = _bad_loans / (_good_loans + _bad_loans)\n\n_bad_good_loans = pd.DataFrame({\n    'Unique values': [_good_loans, _good_loans_pc, _bad_loans, _bad_loans_pc, _observations],\n    'Data type': ['NA', 'NA', 'NA', 'NA', 'NA'],\n    'Null values': ['NA', 'NA', 'NA', 'NA', 'NA'],\n    'Empty values': ['NA', 'NA', 'NA', 'NA', 'NA']\n    },\n    index = ['Good loans', 'Good loans %','Bad loans', 'Bad loans %', 'Number of observations']\n)\n\n# Concat dataframes\nresult = pd.concat([_df, _bad_good_loans])", "title": "Data Overview (Post Manipulation", "nodeClass": "report", "moduleId": "data_mod", "x": 280, "y": 250, "z": 1, "w": "184", "h": "30", "description": null, "units": null, "color": "#cccccc", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "data_overview", "definition": "_data = original_data\n\n# Get column values information\n_unique_values = _data.nunique()\n_data_types = _data.dtypes.astype(str).values.tolist()\n_null_values = _data.isnull().sum()\n_empty_values = ((_data == '') | (_data == ' ')).sum()\n\n# Create dataframe\n_df = pd.DataFrame({\n    'Unique values': _unique_values,\n    'Data type': _data_types, \n    'Null values': _null_values, \n    'Empty values': _empty_values\n    }\n)\n\n# Bad and good loans count and percentage\n_observations = ((_data['Risk'] == 'good') | (_data['Risk'] == 'bad')).sum()\n_good_loans = (_data['Risk'] == 'good').sum()\n_bad_loans = (_data['Risk'] == 'bad').sum()\n_good_loans_pc = _good_loans / (_good_loans + _bad_loans)\n_bad_loans_pc = _bad_loans / (_good_loans + _bad_loans)\n\n_bad_good_loans = pd.DataFrame({\n    'Unique values': [_good_loans, _good_loans_pc, _bad_loans, _bad_loans_pc, _observations],\n    'Data type': ['NA', 'NA', 'NA', 'NA', 'NA'],\n    'Null values': ['NA', 'NA', 'NA', 'NA', 'NA'],\n    'Empty values': ['NA', 'NA', 'NA', 'NA', 'NA']\n    },\n    index = ['Good loans', 'Good loans %','Bad loans', 'Bad loans %', 'Number of observations']\n)\n\n# Concat dataframes\nresult = pd.concat([_df, _bad_good_loans])", "title": "Data Overview", "nodeClass": "report", "moduleId": "data_mod", "x": 280, "y": 110, "z": 1, "w": "184", "h": "30", "description": null, "units": null, "color": "#cccccc", "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "original_data", "definition": "# Read data from CSV without index column\nresult = pd.read_csv(current_path + '/inputs/german_credit_data.csv', index_col = 0)", "title": "Original Data", "nodeClass": "datareading", "moduleId": "data_mod", "x": 60, "y": 110, "z": 1, "w": "184", "h": "30", "description": null, "units": null, "color": null, "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}, {"identifier": "consider_new_loans", "definition": "result = pp.selector(['Yes', 'No'], 0, False)", "title": "Consider New Loans?", "nodeClass": "inputselector", "moduleId": "data_mod", "x": 280, "y": 60, "z": 1, "w": "180", "h": "30", "description": null, "units": null, "color": null, "errorInDef": false, "nodeInfo": {"showInputs": 1, "showOutputs": 1, "showLabel": 1, "showBorder": 1, "fill": 1, "useNodeFont": 0}, "nodeFont": null, "numberFormat": null, "originalId": null, "extraData": null, "picture": null, "evaluateOnStart": false, "defaultView": null, "prefixIdentifier": null, "hierarchy": null, "_isNodeCircular": false}]}