{
  "uri": "/data/models/pyplan/llascano/Forms para ejemplos/versions/Default/assets/interfaces/Advanced",
  "properties": {
    "id": "004ba385-521e-4b10-b42f-fece6d33282a",
    "name": "Custom row styles",
    "icon": "fa-duotone fa-rows",
    "code": null,
    "grid": {
      "breakpoints": {
        "lg": 640,
        "xxs": 0
      },
      "cols": {
        "lg": 12,
        "xxs": 1
      },
      "rowHeight": 70
    },
    "documentation": null,
    "source": "interface",
    "translations": {
      "name": {},
      "documentation": {}
    }
  },
  "definition": [
    {
      "component_type": "core.Form",
      "component_id": "dd3a879d-e565-48ea-a904-52fee5d06ca9",
      "namespace": "ppc",
      "node_id": "form_w_custom_rows",
      "x": 0,
      "y": 0,
      "w": 3,
      "h": 6,
      "error_code": null,
      "error_detail": null,
      "properties": {
        "code": "from typing import List\nimport pyplan_core.interface.components.core as ppc\nimport pyplan_core.interface.classes as ppcl\nfrom pyplan_core.classes.Form import FormChange\nfrom pyplan_core.interface.components.events import BaseEvent\nimport pyplan_core.interface.results as results\n\nfrom pyplan_core.interface.classes.BaseComponent import ComponentErrorCode\n\nfrom pyplan_core.interface.components.core.FormProperties import FormData\nfrom pyplan_core.interface.components.core.TableProperties import RowCellProperty\n\n\nclass MyComponent(ppc.Form):\n\n    def render(self, df: pd.DataFrame, event) -> FormData:\n        \"\"\"Renders the component and returns a FormData object\"\"\"\n        form = self.get_form()\n\n        self.model.getNode('datos_demanda').silentInvalidate()\n        df_from_model = self.model.getNode('datos_demanda').result\n\n        df_demanda = df_from_model.melt(id_vars='sku', value_vars=['planeada','diferencia'], var_name='tipo', value_name='demanda') \n        # agrega campo id para igualar estructura de formulario y orden para ordenar filas\n        df_demanda['id'] = 0\n\n        # agrega orden al df del formulario para ordenar filas\n        df['orden'] = 2\n        df_demanda['orden'] = np.where(df_demanda['tipo']=='planeada',1,3)\n\n        # concatena y ordena dataframe final\n        final_df = pd.concat([df, df_demanda])\n        final_df = final_df.sort_values(by=['sku', 'orden'])\n        final_df.drop(columns=['orden'], inplace=True)\n\n        self.cell_properties = [\n            RowCellProperty(column='tipo', values=['planeada','diferencia'], cell_properties={\n                \"readOnly\":True,\n                \"style\": {\n                    \"background-color\": \"#676A46\"\n                }\n            })\n        ]\n        \n\n        \n\n\n\n\n        \n\n        return self.utils.generate_result_data(\n            df=final_df,\n            form=form,\n            table_properties=self.properties,\n            row_page_number=self.row_page_number,\n            column_page_number=self.column_page_number,\n            edit_mode=self.edit_mode,\n            cell_properties=self.cell_properties,\n            has_unconfirmed_changes=self.has_unconfirmed_changes(),\n        )\n\n    \n\n\ncomponent: MyComponent = MyComponent.parse_obj(component_definition)\nresult = component\n",
        "custom_code": true,
        "title": {
          "enabled": true,
          "text": "Demanda por sku",
          "custom_text": "",
          "show_units": true,
          "units_text": ""
        },
        "hide_header": null,
        "hide_border": null,
        "table_properties": {
          "colHeaders": true,
          "manualColumnResize": true,
          "multiColumnSorting": true,
          "rowHeaders": false
        },
        "calculated_fields": [],
        "unlink": [],
        "pivot": {
          "agg": {
            "sku": "sum"
          },
          "params": {
            "rows": [
              "id"
            ],
            "columns": [],
            "measures": [
              "sku"
            ]
          }
        },
        "page_size": {
          "rows": 100,
          "columns": 500
        },
        "sort": {},
        "renderers": {},
        "columns": {
          "id": {
            "readOnly": true
          },
          "tipo": {
            "readOnly": true,
            "className": ""
          }
        },
        "right_total": false,
        "bottom_total": false,
        "hide_empty_data": "",
        "show_pivot_toolbar": false,
        "show_filter_toolbar": false,
        "drilldowns": [],
        "styles": {
          "all": {
            "style": {},
            "conditional_format": [],
            "value_format": {
              "type": "number",
              "thousands_separator": true,
              "decimal_places": 2,
              "prefix": "",
              "suffix": "",
              "date_format": ""
            }
          },
          "custom": [
            {
              "conditions": [
                {
                  "condition_type": "column",
                  "dimension_name": "columns",
                  "filter_type": "equal",
                  "values": [
                    "sku"
                  ],
                  "apply_to": "values"
                }
              ],
              "cell_properties": {
                "style": {},
                "conditional_format": [],
                "value_format": {
                  "type": "number",
                  "thousands_separator": true,
                  "decimal_places": 0,
                  "prefix": "",
                  "suffix": "",
                  "date_format": ""
                }
              }
            }
          ]
        },
        "applied_hierarchies": {},
        "hide_id_column": true
      },
      "alternative_properties": null,
      "filters": {},
      "cell_properties": [
        {
          "cell_properties": {
            "style": {
              "background-color": "#676A46"
            },
            "conditional_format": [],
            "readOnly": true
          },
          "apply_to": "all",
          "column": "tipo",
          "values": [
            "planeada",
            "diferencia"
          ]
        }
      ]
    },
    {
      "component_type": "core.Table",
      "component_id": "77cea2df-6df9-45a3-9f7c-beb791924ade",
      "namespace": "ppc",
      "node_id": "values_from_form",
      "x": 3,
      "y": 0,
      "w": 8,
      "h": 6,
      "error_code": null,
      "error_detail": null,
      "properties": {
        "code": null,
        "custom_code": false,
        "title": {
          "enabled": true,
          "text": "Valores en formulario",
          "custom_text": "",
          "show_units": true,
          "units_text": ""
        },
        "hide_header": null,
        "hide_border": null,
        "table_properties": {
          "colHeaders": true,
          "manualColumnResize": true,
          "multiColumnSorting": true,
          "rowHeaders": false
        },
        "calculated_fields": [],
        "unlink": [],
        "pivot": {
          "agg": {
            "id": "sum"
          },
          "params": {
            "rows": [],
            "columns": [
              "sku",
              "demanda"
            ],
            "measures": []
          }
        },
        "page_size": {
          "rows": 100,
          "columns": 500
        },
        "sort": {},
        "renderers": {},
        "columns": {},
        "right_total": false,
        "bottom_total": false,
        "hide_empty_data": "",
        "show_pivot_toolbar": false,
        "show_filter_toolbar": false,
        "drilldowns": [],
        "styles": {
          "all": {
            "style": {},
            "conditional_format": [],
            "value_format": {
              "type": "number",
              "thousands_separator": true,
              "decimal_places": 2,
              "prefix": "",
              "suffix": "",
              "date_format": ""
            }
          },
          "custom": []
        },
        "applied_hierarchies": {}
      },
      "alternative_properties": {
        "code": null,
        "custom_code": false,
        "title": {
          "enabled": true,
          "text": "Valores en formulario",
          "custom_text": "",
          "show_units": true,
          "units_text": ""
        },
        "hide_header": null,
        "hide_border": null,
        "chart_type": {
          "main_type": "column",
          "subtype": "column_normal",
          "plotly_import_source": "px",
          "plotly_code": "bar",
          "chart_params": {},
          "chart_layout": {
            "barmode": "group"
          }
        },
        "chart_properties": {
          "template": "simple_white"
        },
        "chart_layout": {},
        "selected_event": false,
        "hover_event": false,
        "hover_select_targets": [],
        "drilldown_event": true,
        "unlink": [],
        "pivot": {
          "agg": {
            "id": "sum"
          },
          "params": {
            "y": "id",
            "x": "tipo",
            "color": "username_id"
          }
        },
        "page_size": {
          "rows": 1000,
          "columns": 1000
        },
        "hide_empty_data": false,
        "drilldowns": [],
        "show_pivot_toolbar": false,
        "show_filter_toolbar": false,
        "available_drilldown_indexes": [
          "sku",
          "demanda",
          "timestamp",
          "department_ids",
          "user_ids"
        ],
        "supported_types_for_drilldown": [
          "column",
          "bar",
          "line",
          "scatter",
          "area",
          "pie",
          "funnel",
          "funnel_area",
          "histogram",
          "strip"
        ],
        "styles": {
          "all": {
            "value_format": {
              "type": "number",
              "thousands_separator": true,
              "decimal_places": 2,
              "prefix": "",
              "suffix": "",
              "date_format": ""
            },
            "conditional_format": [],
            "style": {}
          },
          "custom": []
        },
        "applied_hierarchies": {},
        "calculated_fields": []
      },
      "filters": {},
      "cell_properties": null
    }
  ]
}